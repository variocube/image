# See https://wiki.debian.org/RaspberryPi3 for known issues and more details.

steps:
  - mkimg: "{{ output }}"
    size: 1500M

  - mklabel: msdos
    device: "{{ output }}"

  - mkpart: primary
    fs-type: 'fat32'
    device: "{{ output }}"
    start: 4MiB
    end: 20%
    tag: /boot

  - mkpart: primary
    device: "{{ output }}"
    start: 20%
    end: 100%
    tag: /

  - kpartx: "{{ output }}"

  - mkfs: vfat
    partition: /boot
    label: FIRMWARE

  - mkfs: ext4
    partition: /
    label: ROOT

  - mount: /

  - mount: /boot
    mount-on: /
    dirname: '/boot/firmware'

  - unpack-rootfs: /

  # Base installation
  - qemu-debootstrap: buster
    mirror: http://deb.debian.org/debian
    target: /
    arch: arm64
    components:
    - main
    - contrib
    - non-free
    unless: rootfs_unpacked

  - copy-file: /etc/initramfs-tools/hooks/rpi-resizerootfs
    src: rootfs/etc/initramfs-tools/hooks/rpi-resizerootfs
    perm: 0755
    unless: rootfs_unpacked

  - copy-file: /etc/initramfs-tools/scripts/local-bottom/rpi-resizerootfs
    src: rootfs/etc/initramfs-tools/scripts/local-bottom/rpi-resizerootfs
    perm: 0755
    unless: rootfs_unpacked

  - copy-file: /etc/apt/sources.list
    src: rootfs/etc/apt/sources.list
    perm: 0755
    unless: rootfs_unpacked

  - chroot: /
    shell: apt-get update
    unless: rootfs_unpacked

  - apt: install
    packages:
    - ssh
    - parted
    - dosfstools
    - iw
    - wpasupplicant
    - gnupg
    - curl
    - raspi3-firmware
    - linux-image-arm64
    - firmware-brcm80211
    tag: /
    unless: rootfs_unpacked

  # Install variocube packages

  - copy-file: /etc/apt/sources.list.d/variocube.list
    src: rootfs/etc/apt/sources.list.d/variocube.list
    perm: 0755
    unless: rootfs_unpacked

  - chroot: /
    shell: curl https://og-repository.s3.amazonaws.com/debian/key.asc | apt-key add -
    unless: rootfs_unpacked

  - apt: install
    packages:
      - variocube-base
      - variocube-unit
    tag: /
    unless: rootfs_unpacked

  # Cache rootfs
  - cache-rootfs: /
    unless: rootfs_unpacked

  - shell: |
      echo "vc-image" > "${ROOT?}/etc/hostname"

      # Allow root logins locally with no password
      sed -i 's,root:[^:]*:,root::,' "${ROOT?}/etc/shadow"

      install -m 644 -o root -g root rootfs/etc/fstab "${ROOT?}/etc/fstab"

      install -m 644 -o root -g root rootfs/etc/network/interfaces.d/eth0 "${ROOT?}/etc/network/interfaces.d/eth0"
      install -m 600 -o root -g root rootfs/etc/network/interfaces.d/wlan0 "${ROOT?}/etc/network/interfaces.d/wlan0"

      mkdir -p "${ROOT?}/etc/systemd/system/basic.target.requires/"
      mkdir -p "${ROOT?}/etc/systemd/system/multi-user.target.requires/"

      install -m 755 -o root -g root rootfs/usr/local/sbin/rpi-set-sysconf "${ROOT?}/usr/local/sbin/rpi-set-sysconf"
      install -m 644 -o root -g root rootfs/etc/systemd/system/rpi-set-sysconf.service "${ROOT?}/etc/systemd/system/"
      install -m 644 -o root -g root rootfs/boot/firmware/sysconf.txt "${ROOT?}/boot/firmware/sysconf.txt"
      ln -s /etc/systemd/system/rpi-set-sysconf.service "${ROOT?}/etc/systemd/system/basic.target.requires/rpi-set-sysconf.service"

      install -m 644 -o root -g root rootfs/etc/systemd/system/rpi-reconfigure-raspi-firmware.service "${ROOT?}/etc/systemd/system/"
      ln -s /etc/systemd/system/rpi-reconfigure-raspi-firmware.service "${ROOT?}/etc/systemd/system/multi-user.target.requires/rpi-reconfigure-raspi-firmware.service"

      install -m 644 -o root -g root rootfs/etc/systemd/system/rpi-generate-ssh-host-keys.service "${ROOT?}/etc/systemd/system/"
      ln -s /etc/systemd/system/rpi-generate-ssh-host-keys.service "${ROOT?}/etc/systemd/system/multi-user.target.requires/rpi-generate-ssh-host-keys.service"
      rm -f "${ROOT?}"/etc/ssh/ssh_host_*_key*

    root-fs: /

  # Copy the relevant device tree files to the boot partition
  - chroot: /
    shell: |
      install -m 644 -o root -g root /usr/lib/linux-image-*-arm64/broadcom/bcm*rpi*.dtb /boot/firmware/

  # Clean up archive cache (likely not useful) and lists (likely outdated) to
  # reduce image size by several hundred megabytes.
  - chroot: /
    shell: |
      apt-get clean
      rm -rf /var/lib/apt/lists

  # Modify the kernel commandline we take from the firmware to boot from
  # the partition labeled raspiroot instead of forcing it to mmcblk0p2
  #
  # These changes will be overwritten after the hardware is probed
  # after dpkg reconfigures raspi-firmware (upon first boot).
  - chroot: /
    shell: |
      sed -i 's/^/console=ttyS1,115200 /' /boot/firmware/cmdline.txt
      sed -i 's/.dev.mmcblk0p2/LABEL=ROOT/' /boot/firmware/cmdline.txt

  # TODO(https://github.com/larswirzenius/vmdb2/issues/24): remove once vmdb
  # clears /etc/resolv.conf on its own.
  - shell: |
      rm "${ROOT?}/etc/resolv.conf"
    root-fs: /
